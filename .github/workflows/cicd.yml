name: CI
run-name: "${{ github.event_name == 'workflow_dispatch' && format('CI: {0}', github.ref_name) || '' }}"

on:
  push:
    branches: ~
  pull_request: ~

env:
  PYTHON_VERSION: "3.12"

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true

      - name: Create Python virtual environment
        run: |
          python -m venv venv
          . venv/bin/activate
          python --version
          pip install -r requirements.txt

      - name: Install pre-commit dependencies
        run: |
          . venv/bin/activate
          pre-commit install-hooks

      - name: Run codespell
        run: |
          . venv/bin/activate
          pre-commit run --all-files codespell

      - name: Run check_shellcheck
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual check_shellcheck --all-files --show-diff-on-failure

      - name: Run mixed-line-ending
        run: |
          . venv/bin/activate
          pre-commit run --all-files mixed-line-ending

      - name: Python Lint
        run: |
          . venv/bin/activate
          pre-commit run --all-files isort
          pre-commit run --hook-stage manual black --all-files --show-diff-on-failure
          pre-commit run --all-files flake8
          pre-commit run --all-files pylint
          pre-commit run --all-files bandit

      - name: Run rstcheck
        run: |
          . venv/bin/activate
          pre-commit run --all-files rstcheck

      - name: Run check-yaml
        run: |
          . venv/bin/activate
          pre-commit run --all-files check-yaml

      - name: Run check-toml
        run: |
          . venv/bin/activate
          pre-commit run --all-files check-toml
